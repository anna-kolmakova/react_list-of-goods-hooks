{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSort","isReversed","setReverse","goods","visibleGoods","sort","firstGood","secondGood","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,oBAAS,GAA1C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA9BD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQR,GACN,KAAKL,EAASc,QAEZ,OAAOF,EAAUG,cAAcF,GACjC,KAAKb,EAASgB,OAEZ,OAAOJ,EAAUK,OAASJ,EAAWI,OACvC,QAEE,OAAO,MAITV,GACFG,EAAaQ,UAGRR,EAMOS,CAAkBlB,EAAiB,CAAEI,WAAUE,eAmB7D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QARR,WACEf,EAAQN,EAASc,UAQXQ,KAAK,SACLF,UAAWG,IACT,iBAAkB,CAAE,WAAYlB,IAAaL,EAASc,UAJ1D,iCAUA,wBACEO,QAtBR,WACEf,EAAQN,EAASgB,SAsBXM,KAAK,SACLF,UAAWG,IACT,oBAAqB,CAAE,WAAYlB,IAAaL,EAASgB,SAJ7D,4BAUA,wBACEK,QApCR,WACEb,GAAYD,IAoCNe,KAAK,SACLF,UAAWG,IACT,oBAAqB,CAAE,YAA2B,IAAfhB,IAJvC,sBAUGF,IAAaL,EAASI,OACN,IAAfG,IAEF,wBACEc,QAtDV,WACEf,EAAQN,EAASI,MACjBI,GAAW,IAqDHc,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACE,6BACGX,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,eC7HfC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e92aeb0c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n\n        return firstGood.localeCompare(secondGood);\n      case SortType.LENGTH:\n\n        return firstGood.length - secondGood.length;\n      default:\n\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSort] = useState(SortType.NONE);\n  const [isReversed, setReverse] = useState(false);\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  function reset() {\n    setSort(SortType.NONE);\n    setReverse(false);\n  }\n\n  function reverseGoods() {\n    setReverse(!isReversed);\n  }\n\n  function sortByLength() {\n    setSort(SortType.LENGTH);\n  }\n\n  function sortByAlpabet() {\n    setSort(SortType.ALPABET);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortByAlpabet}\n          type=\"button\"\n          className={classNames(\n            'button is-info', { 'is-light': sortType !== SortType.ALPABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={classNames(\n            'button is-success', { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverseGoods}\n          type=\"button\"\n          className={classNames(\n            'button is-warning', { 'is-light': isReversed === false },\n          )}\n        >\n          Reverse\n        </button>\n\n        {((sortType !== SortType.NONE)\n        || (isReversed === true))\n        && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}